[{"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\index.tsx":"1","C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\reportWebVitals.ts":"2","C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\App.tsx":"3","C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Header.tsx":"4","C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Footer.tsx":"5","C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Process.tsx":"6","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\index.tsx":"7","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reportWebVitals.ts":"8","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\App.tsx":"9","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Process.tsx":"10","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Footer.tsx":"11","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Header.tsx":"12","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Index.tsx":"13","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Product.tsx":"14","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\test.tsx":"15","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Test.tsx":"16","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\index.ts":"17","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\currentUser.ts":"18","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\counter.ts":"19","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\index.ts":"20","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\counterActions.ts":"21","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\userActions.ts":"22","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\entryAction.ts":"23","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\entryItem.ts":"24","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Item.tsx":"25","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\teamAction.ts":"26","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\team.ts":"27"},{"size":500,"mtime":1629874447609,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1629874447609,"results":"30","hashOfConfig":"29"},{"size":275,"mtime":1640236551396,"results":"31","hashOfConfig":"29"},{"size":955,"mtime":1640236932581,"results":"32","hashOfConfig":"29"},{"size":195,"mtime":1638774869906,"results":"33","hashOfConfig":"29"},{"size":28501,"mtime":1644473077845,"results":"34","hashOfConfig":"29"},{"size":705,"mtime":1649641520285,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1629874447609,"results":"37","hashOfConfig":"36"},{"size":3744,"mtime":1649641520169,"results":"38","hashOfConfig":"36"},{"size":26438,"mtime":1649641520232,"results":"39","hashOfConfig":"36"},{"size":195,"mtime":1638774869906,"results":"40","hashOfConfig":"41"},{"size":1153,"mtime":1649641520200,"results":"42","hashOfConfig":"36"},{"size":1517,"mtime":1649641520216,"results":"43","hashOfConfig":"36"},{"size":3225,"mtime":1649641520247,"results":"44","hashOfConfig":"36"},{"size":1272,"mtime":1648801856605,"results":"45","hashOfConfig":"36"},{"size":2385,"mtime":1649641520270,"results":"46","hashOfConfig":"36"},{"size":324,"mtime":1649641520301,"results":"47","hashOfConfig":"36"},{"size":449,"mtime":1649641520285,"results":"48","hashOfConfig":"36"},{"size":289,"mtime":1649641520285,"results":"49","hashOfConfig":"36"},{"size":296,"mtime":1649641520200,"results":"50","hashOfConfig":"36"},{"size":249,"mtime":1649641520169,"results":"51","hashOfConfig":"36"},{"size":333,"mtime":1649641520200,"results":"52","hashOfConfig":"36"},{"size":322,"mtime":1649641520185,"results":"53","hashOfConfig":"36"},{"size":808,"mtime":1649641520285,"results":"54","hashOfConfig":"36"},{"size":20579,"mtime":1649641520216,"results":"55","hashOfConfig":"36"},{"size":436,"mtime":1649641520200,"results":"56","hashOfConfig":"36"},{"size":1199,"mtime":1649641520301,"results":"57","hashOfConfig":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"81gwxs",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"9wkyyi",{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1lh5dmp",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\index.tsx",[],["138","139"],"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\reportWebVitals.ts",[],"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\App.tsx",[],"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Header.tsx",["140","141","142"],"import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  const [ title, setTitle ] = useState<string>(\"→この文章を消して大会名や部門名を入力←\")\r\n\r\n  const changeTitle = (e:any) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  const titleClear = () => {\r\n    setTitle('');\r\n  }\r\n  const returnTitle = () => {\r\n    if (!title) {\r\n      setTitle(\"→この文章を消して大会名や部門名を入力←\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    if (title === \"→この文章を消して大会名や部門名を入力←\") {\r\n      document.title = \"にせっとまっち\";\r\n    } else {\r\n      document.title = title;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"WebTitle\">「にせっとまっち」</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n",["143","144"],"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Footer.tsx",[],"C:\\Users\\AIQ11\\Documents\\Web\\2set\\src\\components\\Process.tsx",[],"C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\index.tsx",["145"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './App';\nimport rootReducer from './reducers';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reportWebVitals.ts",["146","147"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\App.tsx",["148","149","150"],"import './App.css';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter, Route, Routes, Link } from 'react-router-dom';\n\nimport allActions from './actions';\nimport Header from './components/Header';\nimport Index from './components/Index';\nimport Item from './components/Item';\nimport Process from './components/Process';\nimport Product from './components/Product';\nimport Test from './components/Test';\n\ntype Doc = {\n  id: number;\n  name: string;\n};\n\nconst App: React.FC = () => {\n  const [docu, setDocu] = useState<string>('');\n  const [id, setId] = useState<number>(0);\n  const [list, setList] = useState<Doc[]>([]);\n  const [note, setNote] = useState<string | null>('');\n  const [item, setItem] = useState<string>('');\n\n  const entryItem = useSelector((state: any) => state.entryItem);\n  const dispatch = useDispatch();\n  const itemName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (item) {\n      if (item.length < 33) {\n        setItem(event.target.value);\n        console.log(item);\n      }\n    }\n  };\n  const defaultItem = () => {\n    setItem(item.slice(1));\n    console.log(item);\n  };\n  const nullItem = () => {\n    setItem(' ');\n    console.log(item);\n  };\n\n  const nullDocu = () => {\n    setDocu(' ');\n    console.log(docu);\n  };\n  const defaultDocu = () => {\n    setDocu(docu.slice(1));\n  };\n\n  console.log(entryItem.itemList);\n\n  // ドキュメントの名前を入力して登録する\n  const docuName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (docu.length < 33) {\n      setDocu(event.target.value);\n      console.log(docu);\n    }\n  };\n  // console.log(list);\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className='App'>\n        <div className='Top'>\n          <div className='TopContainer'>\n            <div className='TopContainer__Left'>\n              {/* Reduxを使ったテスト */}\n              <div className='TopHead'>\n                <div className='TopButton'>\n                  <input\n                    className='TopButton__name'\n                    type='text'\n                    id='name'\n                    onChange={itemName}\n                    value={!item ? '新しいドキュメントを作成する' : item}\n                    onBlur={defaultItem}\n                    onClick={nullItem}\n                  ></input>\n                  <button\n                    onClick={() => dispatch(allActions.entryAction.addItem(item))}\n                    className='TopButton__button'\n                  >\n                    作成する\n                  </button>\n                </div>\n                <div className='TopHead__title'>＜ドキュメント一覧＞</div>\n              </div>\n              <ul className='TopList'>\n                {entryItem.itemList.map((item: any) => (\n                  <li key={item} className='TopList__item'>\n                    <div className='TopList__itemName'>\n                      <Link to={`./${item}`} className='TopList__itemName'>\n                        <p>{item}</p>\n                      </Link>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className='TopContainer__Right'>\n              <Routes>\n                <Route path='/' element={<Index />} />\n                <Route path='/top' element={<Process />} />\n                <Route path='/test' element={<Test />} />\n                <Route path='/:id/:name' element={<Product />} />\n                <Route path='/:item' element={<Item />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <Footer /> */}\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Process.tsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import { useState, useEffect } from 'react';\r\nimport * as React from 'react';\r\n// import ExcelJS from \"exceljs\";\r\n// import File from \"./File\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n// import Select from 'react-select';\r\n// import ReactDOM from \"react-dom\";\r\n\r\ntype Pro = {\r\n  id: number;\r\n  name: string;\r\n  gross: number;\r\n  point: number;\r\n  score: number;\r\n};\r\n\r\ntype Scr = {\r\n  name: string;\r\n  time1: number;\r\n  time2: number;\r\n  count: number;\r\n  marks: number;\r\n};\r\n\r\nconst Process: React.FC = () => {\r\n  const [plan, setPlan] = useState<Scr[]>([]);\r\n  const [time1, setTime1] = useState<number>(0);\r\n  const [time2, setTime2] = useState<number>(0);\r\n  const [list, setList] = useState<Pro[]>([]);\r\n  const [data, setData] = useState<any>();\r\n  const [count, setCount] = useState<number>(0);\r\n  const [win, setWin] = useState<number>(0);\r\n  const [lose, setLose] = useState<number>(0);\r\n  const [drawWin, setDrawWin] = useState<number>(0);\r\n  const [drawDraw, setDrawDraw] = useState<number>(0);\r\n  const [drawLose, setDrawLose] = useState<number>(0);\r\n  const [sort, setSort] = useState<any>('');\r\n\r\n  const [title, setTitle] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n\r\n  const changeTitle = (e: any) => {\r\n    setName(e.target.value);\r\n    console.log(e);\r\n  };\r\n  const onTitle = () => {\r\n    setTitle(name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    if (title === '') {\r\n      document.title = '2setMatch';\r\n    } else {\r\n      document.title = title;\r\n    }\r\n  });\r\n\r\n  const changeData = (e: any) => {\r\n    setData(e.target.value);\r\n    // setCount(Math.random());\r\n  };\r\n  const changeWin = (e: any) => {\r\n    setWin(e.target.value);\r\n    setLose(0);\r\n  };\r\n  const changeDrawWin = (e: any) => {\r\n    setDrawWin(e.target.value);\r\n  };\r\n  const changeDrawDraw = (e: any) => {\r\n    setDrawDraw(e.target.value);\r\n  };\r\n  const changeDrawLose = (e: any) => {\r\n    setDrawLose(e.target.value);\r\n  };\r\n  const addList = () => {\r\n    setList([\r\n      ...list,\r\n      {\r\n        id: data,\r\n        name: data,\r\n        gross: 0,\r\n        point: 0,\r\n        score: 0,\r\n      },\r\n    ]);\r\n    setData('');\r\n  };\r\n\r\n  // 対戦表に登録したチームの取り消し\r\n  const handleRemoveTask = (index: number) => {\r\n    const delTeam: any = plan.find((elem) => plan[index] === elem);\r\n    const newPlan = [...plan];\r\n    newPlan.splice(index, 1);\r\n    setPlan(newPlan);\r\n    const result: any = newPlan.filter((plans) => {\r\n      return plans.name === delTeam.name;\r\n    });\r\n    const result1: any = list.find((elem) => elem.name === delTeam.name);\r\n    const result2 = result.length;\r\n    result1.gross = result2;\r\n  };\r\n\r\n  // 対戦表にチームを登録\r\n  const addPlan = (index: number) => {\r\n    const addName: any = list.find((elem) => list[index] === elem);\r\n    setPlan([...plan, { name: addName.name, time1: 0, time2: 0, count: 0, marks: 0 }]);\r\n    const result: any = plan.filter((plans) => {\r\n      return plans.name === list[index].name;\r\n    });\r\n    const result1 = result.length + 1;\r\n    list[index].gross = result1;\r\n  };\r\n\r\n  const addTime1 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem);\r\n    targetPlan.time1 = targetPlan.time1 + minute;\r\n    setTime1(targetPlan.time1);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < list.length; i++) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log('ここからエラー回避');\r\n    console.log(time1);\r\n    console.log(count);\r\n  };\r\n  const addTime2 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem);\r\n    targetPlan.time2 = targetPlan.time2 + minute;\r\n    setTime2(targetPlan.time2);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < list.length; i++) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(time2);\r\n    console.log(count);\r\n  };\r\n\r\n  /* いずれは実装したい\r\n  const handleClickDownloadButton = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    format:  \"xlsx\" | \"csv\"\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    workbook.addWorksheet(\"sheet1\");\r\n    const worksheet = workbook.getWorksheet(\"sheet1\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"No.\", key: \"\", width: 10 },\r\n      { header: \"工程\", key: \"name\", width: 20},\r\n      { header: \"時間\", key: \"time1\", width: 20}\r\n    ];\r\n\r\n    worksheet.addRows(plan);\r\n\r\n    const uint8Array =\r\n      format === \"xlsx\"\r\n        ? await workbook.xlsx.writeBuffer() //xlsxの場合\r\n        : await workbook.csv.writeBuffer(); //csvの場合\r\n    const blob = new Blob([uint8Array], { type: \"application/octet-binary \"});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"NewFile.\" + format; //フォーマットによって拡張子を変える\r\n    a.click();\r\n    a.remove();\r\n  };\r\n  */\r\n\r\n  // const handleOnDragEnd = (result:any) => {\r\n  //   const items = Array.from(plan);\r\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\r\n  //   items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  //   setPlan(items);\r\n  // }\r\n\r\n  // 上にスクロール\r\n  const returnTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  // 下にスクロール\r\n  const goBottom = () => {\r\n    const elm = document.documentElement;\r\n    //scrollHeight ページの高さ clientHeight ブラウザの高さ\r\n    const bottom = elm.scrollHeight - elm.clientHeight;\r\n    //垂直方向へ移動\r\n    window.scrollTo({\r\n      behavior: 'smooth', // スムーズスクロールにする\r\n      left: 0, // 左から離れた位置\r\n      top: bottom, // 上から離れた位置\r\n    });\r\n  };\r\n\r\n  // ソート機能を実装\r\n  const sortGross = () => {\r\n    // let newList: any;\r\n    const newList = list.sort((el1, el2) => {\r\n      if (el1['gross'] < el2['gross']) {\r\n        return 1;\r\n      }\r\n      if (el1['gross'] > el2['gross']) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort('gross');\r\n    console.log(sort);\r\n    setList(newList);\r\n  };\r\n  const sortPoint = () => {\r\n    // let newList: any;\r\n    const newList = list.sort((el1, el2) => {\r\n      if (el1['point'] < el2['point']) {\r\n        return 1;\r\n      }\r\n      if (el1['point'] > el2['point']) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort('point');\r\n    setList(newList);\r\n  };\r\n  const sortScore = () => {\r\n    // let newList: any;\r\n    const newList = list.sort((el1, el2) => {\r\n      if (el1['score'] < el2['score']) {\r\n        return 1;\r\n      }\r\n      if (el1['score'] > el2['score']) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort('score');\r\n    setList(newList);\r\n  };\r\n\r\n  // let sortedLists = useMemo(() => {\r\n  //   let _sortedLists = list.name;\r\n  //   if (sort.key) {\r\n  //     _sortedLists = _sortedLists.sort((a, b) => {\r\n  //       a = a[sort.key];\r\n  //       b = b[sort.key];\r\n\r\n  //       if(a === b) {\r\n  //         return 0;\r\n  //       }\r\n  //       if(a > b) {\r\n  //         return 1 * sort.order;\r\n  //       }\r\n  //       if(a < b) {\r\n  //         return -1 * sort.order;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   return _sortedLists;\r\n  // }, [sort]);\r\n\r\n  // 確認のため設置\r\n  // console.log(list);\r\n\r\n  return (\r\n    <>\r\n      <div className='Header'>\r\n        {!title ? (\r\n          <div className='WebTitle'>2setMatch</div>\r\n        ) : (\r\n          <div className='WebTitle'>{title}</div>\r\n        )}\r\n      </div>\r\n      <div className='Process'>\r\n        <div className='ProcessContainer'>\r\n          <div className='ProcessMain'>\r\n            <div className='ProcessList'>\r\n              {list.length > 0 && (\r\n                <div>\r\n                  <h1 className='teamList'>【チーム一覧】</h1>\r\n                  <p>Q:試合数 P:勝ち点 S:得失点差</p>\r\n                  <div className='ProcessList__Border'>\r\n                    <div className='Head'>\r\n                      <div className='name'>TeamName</div>\r\n                      <button className='gross' onClick={sortGross}>\r\n                        Q\r\n                      </button>\r\n                      <button className='point' onClick={sortPoint}>\r\n                        P\r\n                      </button>\r\n                      <button className='score' onClick={sortScore}>\r\n                        S\r\n                      </button>\r\n                      <div className='space'></div>\r\n                    </div>\r\n                    <ul className='Item'>\r\n                      {list.map((item: Pro, idx: number) => (\r\n                        <li className='ItemList' key={item.name}>\r\n                          <div className='ItemList__data'>\r\n                            <div className='name'>{item.name}</div>\r\n                            <div className='gross'>{item.gross}</div>\r\n                            <div className='point'>{item.point}</div>\r\n                            <div className='score'>{item.score}</div>\r\n                            <button className='AddPlan' onClick={() => addPlan(idx)}>\r\n                              試合\r\n                            </button>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {!title && (\r\n                <div>\r\n                  <h1>１．大会名を登録</h1>\r\n                  <div className='Form'>\r\n                    <div className='FormContent'>\r\n                      <input\r\n                        className='FormContent__name'\r\n                        type='text'\r\n                        id='name'\r\n                        onChange={changeTitle}\r\n                      ></input>\r\n                      <button className='FormContent__button' type='submit' onClick={onTitle}>\r\n                        登 録\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <h1>２．勝ち点を入力</h1>\r\n              <div className='Insert'>\r\n                <div className='InsertContent'>\r\n                  <div className='InsertContent__text'>勝ち</div>\r\n                  <input\r\n                    className='InsertContent__entry'\r\n                    type='number'\r\n                    id='win'\r\n                    onChange={changeWin}\r\n                  ></input>\r\n                </div>\r\n                <div className='InsertContent'>\r\n                  <div className='InsertContent__text'>分勝</div>\r\n                  <input\r\n                    className='InsertContent__entry'\r\n                    type='number'\r\n                    id='draw_win'\r\n                    onChange={changeDrawWin}\r\n                  ></input>\r\n                </div>\r\n                <div className='InsertContent'>\r\n                  <div className='InsertContent__text'>分分</div>\r\n                  <input\r\n                    className='InsertContent__entry'\r\n                    type='number'\r\n                    id='draw_draw'\r\n                    onChange={changeDrawDraw}\r\n                  ></input>\r\n                </div>\r\n                <div className='InsertContent'>\r\n                  <div className='InsertContent__text'>分負</div>\r\n                  <input\r\n                    className='InsertContent__entry'\r\n                    type='number'\r\n                    id='draw_lose'\r\n                    onChange={changeDrawLose}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <h1>３．チームを登録</h1>\r\n              <div className='Form'>\r\n                <div className='FormContent'>\r\n                  <input\r\n                    className='FormContent__name'\r\n                    type='text'\r\n                    id='name'\r\n                    value={data}\r\n                    onChange={changeData}\r\n                  ></input>\r\n                  <button className='FormContent__button' type='submit' onClick={addList}>\r\n                    登 録\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {list.length > 0 && <div className='upButton' onClick={returnTop}></div>}\r\n              {list.length > 0 && <div className='downButton' onClick={goBottom}></div>}\r\n            </div>\r\n            {plan.length > 0 && (\r\n              <div className='Result'>\r\n                <h1 className='title'>【対戦表】</h1>\r\n                <div className='Result__Border'>\r\n                  {plan.map((item, idx: number) => (\r\n                    <>\r\n                      <div className={idx % 2 === 0 ? 'Flex left' : 'Flex right'} key={idx}>\r\n                        <div className='FlexNumber'>\r\n                          {idx % 2 === 0 && (\r\n                            <div className='FlexNumber__item'>第{idx / 2 + 1}試合</div>\r\n                          )}\r\n                        </div>\r\n                        <div className='FlexCross'>\r\n                          {idx % 2 !== 0 && <div className='FlexCross__item'>-</div>}\r\n                          {idx % 2 !== 0 && <div className='FlexCross__item'>-</div>}\r\n                        </div>\r\n                        <div className='FlexCount'>\r\n                          {idx % 2 === 0 && (\r\n                            <div className='FlexCount__Button'>\r\n                              <button className='SubCount top' onClick={() => addTime1(idx, -1)}>\r\n                                <div className='CountText'>-</div>\r\n                              </button>\r\n                              <button className='AddCount top' onClick={() => addTime1(idx, 5)}>\r\n                                <div className='CountText'>+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className='FlexCount__Point'>\r\n                              <div className='ResultTime'>{item.time1}</div>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className='FlexCount__Button'>\r\n                              <button className='SubCount bottom' onClick={() => addTime2(idx, -1)}>\r\n                                <div className='CountText'>-</div>\r\n                              </button>\r\n                              <button className='AddCount bottom' onClick={() => addTime2(idx, 5)}>\r\n                                <div className='CountText'>+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className='FlexCount__Point'>\r\n                              <div className='ResultTime'>{item.time2}</div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className='FlexName'>\r\n                          <div className='ResultName'>\r\n                            <p className='ResultName__text'>{item.name}</p>\r\n                          </div>\r\n                          <button className='DeleteButton' onClick={() => handleRemoveTask(idx)}>\r\n                            取消\r\n                          </button>\r\n                        </div>\r\n                        <div className='FlexCount'>\r\n                          {idx % 2 !== 0 && (\r\n                            <div className='FlexCount__Button'>\r\n                              <button className='SubCount top' onClick={() => addTime1(idx, -1)}>\r\n                                <div className='CountText'>-</div>\r\n                              </button>\r\n                              <button className='AddCount top' onClick={() => addTime1(idx, 5)}>\r\n                                <div className='CountText'>+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className='FlexCount__Point'>\r\n                              <div className='ResultTime'>{item.time1}</div>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className='FlexCount__Button'>\r\n                              <button className='SubCount bottom' onClick={() => addTime2(idx, -1)}>\r\n                                <div className='CountText'>-</div>\r\n                              </button>\r\n                              <button className='AddCount bottom' onClick={() => addTime2(idx, 5)}>\r\n                                <div className='CountText'>+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className='FlexCount__Point'>\r\n                              <div className='ResultTime'>{item.time2}</div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {idx % 2 === 0 && (\r\n                        <div className='Cross'>\r\n                          <div className='Cross__item'>\r\n                            <div className='Cross__text'>-</div>\r\n                          </div>\r\n                          <div className='Cross__item'>\r\n                            <div className='Cross__text'>-</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  ))}\r\n                </div>\r\n                <div>\r\n                  {/* <button onClick={(e) => handleClickDownloadButton(e, \"xlsx\")}>\r\n                  Excel印刷\r\n                </button> */}\r\n                  {/* <button onClick={(e) => handleClickDownloadButton(e, \"csv\")}>\r\n                  CSV形式\r\n                </button> */}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Footer.tsx",[],["185","186"],"C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Header.tsx",["187"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Icon from './image/search.png';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div className='Header'>\r\n      <div className='HeaderContainer'>\r\n        <div className='WebTitle'>2setMatch</div>\r\n        <ul className='HeaderLink'>\r\n          <li className='HeaderLink__item'>\r\n            <Link to='/' className='HeaderLink__text'>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='HeaderLink__item'>\r\n            <Link to='/top' className='HeaderLink__text'>\r\n              TOP\r\n            </Link>\r\n          </li>\r\n          <li className='HeaderLink__item'>\r\n            <Link to='/test' className='HeaderLink__text'>\r\n              TEST\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className='HeaderRight'>\r\n          <div className='search'>\r\n            <img className='icon' src={Icon} alt='アイコン' />\r\n          </div>\r\n          <div className='account'>\r\n            <a className='circle'>TH</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Index.tsx",["188","189","190"],"import * as React from 'react';\r\nimport { Provider, useSelector, useDispatch } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\ninterface Num {\r\n  type: string;\r\n}\r\n\r\ninterface Par {\r\n  num: number;\r\n  item: string;\r\n}\r\n\r\nconst initialState = { num: 0, item: 'テスト' };\r\n\r\nconst reducer = (state: any, action: Num) => {\r\n  switch (action.type) {\r\n    case 'decrement':\r\n      return { ...state, num: state.num - 1 };\r\n    case 'increment':\r\n      return { ...state, num: state.num + 1 };\r\n    case 'test':\r\n      return { ...state, item: state.item + state.item };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nconst Index: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div>HOME</div>\r\n      <h2>ComponentUseReactRedux</h2>\r\n      <Provider store={store}>\r\n        <ChildComponentUseReactRedux />\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChildComponentUseReactRedux = () => {\r\n  const selector = (state: any) => {\r\n    return state.num;\r\n  };\r\n\r\n  const num = useSelector(selector);\r\n  const item = useSelector(selector);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h3>Using useSelector, useDispatch</h3>\r\n      Number: {num}\r\n      Test:{item}\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n      <button onClick={() => dispatch({ type: 'test' })}>teeeest</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Product.tsx",["191"],"import React, { useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router';\r\n\r\ntype Pro = {\r\n  idnum: number;\r\n  users: string | undefined;\r\n  point: number;\r\n  score: number;\r\n  times: number;\r\n  ratio: number;\r\n  count: number;\r\n};\r\n\r\nconst Product: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const { id } = useParams<{ id: string | undefined }>();\r\n  const location = useLocation();\r\n\r\n  const [teamList, setTeamList] = useState<Pro[]>([]);\r\n  const [idNum, setIdNum] = useState<number>(1);\r\n  const [team, setTeam] = useState<string>('');\r\n\r\n  const nullTeam = () => {\r\n    setTeam(' ');\r\n    console.log(team);\r\n  };\r\n  const defaultTeam = () => {\r\n    setTeam(team.slice(1));\r\n  };\r\n\r\n  const handlePutTeam = () => {\r\n    if (team) {\r\n      setTeamList([\r\n        ...teamList,\r\n        { idnum: idNum, users: team, point: 0, score: 0, times: 0, ratio: 0, count: 0 },\r\n      ]);\r\n      setTeam('');\r\n      setIdNum(idNum + 1);\r\n    }\r\n  };\r\n\r\n  //チーム名を入力して登録する\r\n  const teamName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (team.length < 33) {\r\n      setTeam(event.target.value);\r\n      console.log(team);\r\n    }\r\n  };\r\n  console.log(teamList);\r\n  console.log(id);\r\n  console.log(location);\r\n\r\n  return (\r\n    <>\r\n      <div className='Product'>\r\n        <div className='ProductTitle'>【{name}】</div>\r\n        <div className='ProductContainer'>\r\n          <div className='ProductButton'>\r\n            <input\r\n              className='ProductButton__name'\r\n              type='text'\r\n              id='name'\r\n              onChange={teamName}\r\n              value={!team ? 'メモのタイトル名を入力' : team}\r\n              onBlur={defaultTeam}\r\n              onClick={nullTeam}\r\n            ></input>\r\n            <button className='ProductButton__button' type='submit' onClick={handlePutTeam}>\r\n              登 録\r\n            </button>\r\n          </div>\r\n          <div className='Item'>\r\n            <div className='ItemHead id'>No.</div>\r\n            <div className='ItemHead users'>Users</div>\r\n            <div className='ItemHead point'>Point</div>\r\n            <div className='ItemHead score'>Score</div>\r\n            <div className='ItemHead times'>Times</div>\r\n            <div className='ItemHead ratio'>Ratio</div>\r\n            <div className='ItemHead count'>Count</div>\r\n          </div>\r\n          {teamList.length > 0 && (\r\n            <ul className='List'>\r\n              {teamList.map((team) => (\r\n                <li key={team.idnum} className='ListTop'>\r\n                  <div className='ListBody id'>{team.idnum}</div>\r\n                  <div className='ListBody users'>{team.users}</div>\r\n                  <div className='ListBody point'>{team.point}</div>\r\n                  <div className='ListBody score'>{team.score}</div>\r\n                  <div className='ListBody times'>{team.times}</div>\r\n                  <div className='ListBody ratio'>{team.ratio}</div>\r\n                  <div className='ListBody count'>{team.count}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\test.tsx",["192","193","194"],"import * as React from 'react';\r\nimport { Provider, useSelector, useDispatch } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\ninterface Num {\r\n  type: string;\r\n}\r\n\r\ninterface Par {\r\n  num: number;\r\n}\r\n\r\nconst initialState = { num: 0 };\r\n\r\nconst reducer = (state: any, action: Num) => {\r\n  switch (action.type) {\r\n    case 'decrement':\r\n      return { ...state, num: state.num - 1 };\r\n    case 'increment':\r\n      return { ...state, num: state.num + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nconst Test: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div>てすと</div>\r\n      <h2>ComponentUseReactRedux</h2>\r\n      <Provider store={store}>\r\n        <ChildComponentUseReactRedux />\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChildComponentUseReactRedux = () => {\r\n  const selector = (state: any) => {\r\n    return state.num;\r\n  };\r\n\r\n  const num = useSelector(selector);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h3>Using useSelector, useDispatch</h3>\r\n      Number: {num}\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n",[],"C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Test.tsx",["195","196","197","198"],"import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport allActions from '../actions';\r\n\r\ntype RootState = {\r\n  counter: number;\r\n  currentUser: string[];\r\n  entryItem: string;\r\n};\r\n\r\nconst Test: React.FC = () => {\r\n  const [item, setItem] = useState<string>('');\r\n  const counter = useSelector((state: RootState) => state.counter);\r\n  const currentUser = useSelector((state: any) => state.currentUser);\r\n  const entryItem = useSelector((state: any) => state.entryItem);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = { name: 'Rei' };\r\n\r\n  const itemName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (item.length < 33) {\r\n      setItem(event.target.value);\r\n      console.log(item);\r\n    }\r\n  };\r\n  const defaultItem = () => {\r\n    setItem(item.slice(1));\r\n  };\r\n  const nullItem = () => {\r\n    setItem(' ');\r\n    console.log(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(allActions.userActions.setUser(user.name));\r\n  }, []);\r\n\r\n  console.log(entryItem);\r\n  console.log(item);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {currentUser.loggedIn ? (\r\n          <>\r\n            <h1>Hello, {currentUser.user}</h1>\r\n            <button onClick={() => dispatch(allActions.userActions.logOut())}>Logout</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Login</h1>\r\n            <button onClick={() => dispatch(allActions.userActions.setUser(user.name))}>\r\n              Login as Rei\r\n            </button>\r\n          </>\r\n        )}\r\n        <h1>Counter: {counter}</h1>\r\n        <button onClick={() => dispatch(allActions.counterActions.increment())}>\r\n          Increase Counter\r\n        </button>\r\n        <button onClick={() => dispatch(allActions.counterActions.decrement())}>\r\n          Decrease Counter\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h1>Entry Test!!!</h1>\r\n        <input\r\n          type='text'\r\n          onChange={itemName}\r\n          value={!item ? 'メモのタイトルを入力' : item}\r\n          // onBlur={defaultItem}\r\n          onClick={nullItem}\r\n        ></input>\r\n        <button onClick={() => dispatch(allActions.entryAction.addItem(item))}>Entry</button>\r\n      </div>\r\n      {entryItem.itemList.map((team: any) => (\r\n        <div key={item}>{item}</div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\index.ts",["199"],"import { combineReducers } from 'redux';\r\n\r\nimport counter from './counter';\r\nimport currentUser from './currentUser';\r\nimport entryItem from './entryItem';\r\nimport entryTeam from './team';\r\n\r\nconst rootReducer = combineReducers({\r\n  currentUser,\r\n  counter,\r\n  entryItem,\r\n  entryTeam,\r\n});\r\n\r\nexport default rootReducer;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\currentUser.ts",["200","201"],"type Act = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\nconst currentUser = (state = {}, action: Act): any => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n      };\r\n    case 'LOG_OUT':\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        loggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentUser;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\counter.ts",["202","203","204"],"interface Num {\r\n  type: string;\r\n}\r\n\r\nconst counter = (state: any = 1, action: Num): any => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return state + 1;\r\n    case 'DECREMENT':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counter;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\index.ts",["205"],"import counterActions from './counterActions';\r\nimport entryAction from './entryAction';\r\nimport teamAction from './teamAction';\r\nimport userActions from './userActions';\r\n\r\nconst allActions = {\r\n  counterActions,\r\n  userActions,\r\n  entryAction,\r\n  teamAction,\r\n};\r\n\r\nexport default allActions;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\counterActions.ts",["206"],"interface Num {\r\n  type: string;\r\n}\r\n\r\nconst increment = (): Num => {\r\n  return {\r\n    type: 'INCREMENT',\r\n  };\r\n};\r\n\r\nconst decrement = (): Num => {\r\n  return {\r\n    type: 'DECREMENT',\r\n  };\r\n};\r\n\r\nexport default {\r\n  increment,\r\n  decrement,\r\n};\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\userActions.ts",["207"],"interface Obj {\r\n  type: string;\r\n  payload: string;\r\n}\r\n\r\ninterface Num {\r\n  type: string;\r\n}\r\n\r\nconst setUser = (userObj: string): Obj => {\r\n  return {\r\n    type: 'SET_USER',\r\n    payload: userObj,\r\n  };\r\n};\r\n\r\nconst logOut = (): Num => {\r\n  return {\r\n    type: 'LOG_OUT',\r\n  };\r\n};\r\n\r\nexport default {\r\n  setUser,\r\n  logOut,\r\n};\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\entryAction.ts",["208"],"interface Obj {\r\n  type: string;\r\n  payload: string;\r\n}\r\n\r\nconst addItem = (id: string): Obj => {\r\n  return {\r\n    type: 'ADD_ITEM',\r\n    payload: id,\r\n  };\r\n};\r\nconst removeItem = (id: string): Obj => {\r\n  return {\r\n    type: 'REMOVE_ITEM',\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport default {\r\n  addItem,\r\n  removeItem,\r\n};\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\entryItem.ts",["209","210","211","212","213","214","215","216","217"],"type Act = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\nconst initialState = {\r\n  itemList: [],\r\n};\r\n\r\nconst addItem = (array: any, item: any) => {\r\n  return Array.from(new Set([...array, item]));\r\n}; //重複データが入らないようにするための対応\r\n\r\nconst removeItem = (array: any, item: any) => {\r\n  return array.filter((v: any, i: any) => v !== item);\r\n};\r\n\r\nconst entryItem = (state: any = initialState, action: Act): any => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        itemList: addItem(state.itemList, action.payload),\r\n      };\r\n    case 'REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        itemList: removeItem(state.itemList, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default entryItem;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\components\\Item.tsx",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\nimport allActions from '../actions';\r\n\r\nimport Sita from './image/sita.svg';\r\n\r\ntype Pro = {\r\n  idnum: number;\r\n  users: string | undefined;\r\n  point: number;\r\n  score: number;\r\n  times: number;\r\n  ratio: number;\r\n  count: number;\r\n  param: string;\r\n};\r\ntype Scr = {\r\n  users: string;\r\n  time1: number;\r\n  time2: number;\r\n  count: number;\r\n  marks: number;\r\n};\r\n\r\nconst Item: React.FC = () => {\r\n  const { item } = useParams<{ item: string }>();\r\n  const [team, setTeam] = useState<string>('');\r\n  const [plan, setPlan] = useState<Scr[]>([]);\r\n  const [time1, setTime1] = useState<number>(0);\r\n  const [time2, setTime2] = useState<number>(0);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [win, setWin] = useState<number>(0);\r\n  const [lose, setLose] = useState<number>(0);\r\n  const [drawWin, setDrawWin] = useState<number>(0);\r\n  const [drawDraw, setDrawDraw] = useState<number>(0);\r\n  const [drawLose, setDrawLose] = useState<number>(0);\r\n\r\n  const entryTeam = useSelector((state: any) => state.entryTeam);\r\n  const dispatch = useDispatch();\r\n  const teamName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (team) {\r\n      if (team.length < 33) {\r\n        setTeam(event.target.value);\r\n        console.log(team);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nullTeam = () => {\r\n    setTeam(' ');\r\n    console.log(team);\r\n  };\r\n  const defaultTeam = () => {\r\n    setTeam(team.slice(1));\r\n  };\r\n\r\n  const param = window.location.pathname;\r\n  const List = entryTeam.teamList.filter((item: any) => item.param === param);\r\n\r\n  // 対戦表にチームを登録\r\n  const addPlan = (index: number) => {\r\n    const addName: any = List.find((elem: any) => List[index] === elem);\r\n    setPlan([...plan, { users: addName.users, time1: 0, time2: 0, count: 0, marks: 0 }]);\r\n    const result: any = plan.filter((plans) => {\r\n      return plans.users === List[index].users;\r\n    });\r\n    const result1 = result.length + 1;\r\n    List[index].times = result1;\r\n  };\r\n\r\n  // 対戦表に登録したチームの取り消し\r\n  const handleRemoveTask = (index: number) => {\r\n    const delTeam: any = plan.find((elem: any) => plan[index] === elem);\r\n    const newPlan = [...plan];\r\n    newPlan.splice(index, 1);\r\n    setPlan(newPlan);\r\n    const result: any = newPlan.filter((plans) => {\r\n      return plans.users === delTeam.users;\r\n    });\r\n    const result1: any = List.find((elem: any) => elem.users === delTeam.users);\r\n    const result2 = result.length;\r\n    result1.times = result2;\r\n  };\r\n\r\n  const addTime1 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem: any) => plan[index] === elem);\r\n    targetPlan.time1 = targetPlan.time1 + minute;\r\n    setTime1(targetPlan.time1);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem: any) => plan[index + 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < List.length; i++) {\r\n      const countPlan: any = List.find((elem: any) => List[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.users === countPlan.users;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をListに反映\r\n      const update: any = List.find((elem: any) => elem.users === countPlan.users);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.users === countPlan.users;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をListに反映\r\n      const overwrite: any = List.find((elem: any) => elem.users === countPlan.users);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log('ここからエラー回避');\r\n    console.log(time1);\r\n    console.log(count);\r\n  };\r\n  const addTime2 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem);\r\n    targetPlan.time2 = targetPlan.time2 + minute;\r\n    setTime2(targetPlan.time2);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < nextPlan.time1 + nextPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (targetPlan.time1 + targetPlan.time2 > prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (targetPlan.time1 + targetPlan.time2 < prevPlan.time1 + prevPlan.time2) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < List.length; i++) {\r\n      const countPlan: any = List.find((elem: any) => List[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.users === countPlan.users;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をListに反映\r\n      const update: any = List.find((elem: any) => elem.users === countPlan.users);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.users === countPlan.users;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をListに反映\r\n      const overwrite: any = List.find((elem: any) => elem.users === countPlan.users);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(time2);\r\n    console.log(count);\r\n  };\r\n\r\n  const changeWin = (e: any) => {\r\n    setWin(e.target.value);\r\n    setLose(0);\r\n  };\r\n  const changeDrawWin = (e: any) => {\r\n    setDrawWin(e.target.value);\r\n  };\r\n  const changeDrawDraw = (e: any) => {\r\n    setDrawDraw(e.target.value);\r\n  };\r\n  const changeDrawLose = (e: any) => {\r\n    setDrawLose(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='Product'>\r\n        <div className='ProductTitle'>【{item}】</div>\r\n        <div className='ProductContainer'>\r\n          <div className='ProductTop'>\r\n            <div className='ProductButton'>\r\n              <input\r\n                className='ProductButton__name'\r\n                type='text'\r\n                id='name'\r\n                onChange={teamName}\r\n                value={!team ? 'メモのタイトル名を入力' : team}\r\n                onBlur={defaultTeam}\r\n                onClick={nullTeam}\r\n              ></input>\r\n              <button\r\n                className='ProductButton__button'\r\n                onClick={() => {\r\n                  dispatch(allActions.teamAction.addTeam(team, param));\r\n                }}\r\n              >\r\n                登録する\r\n              </button>\r\n            </div>\r\n            <div className='Insert'>\r\n              <div className='InsertContent'>\r\n                <div className='InsertContent__text'>WW</div>\r\n                <input\r\n                  className='InsertContent__entry'\r\n                  type='number'\r\n                  id='win'\r\n                  onChange={changeWin}\r\n                ></input>\r\n              </div>\r\n              <div className='InsertContent'>\r\n                <div className='InsertContent__text'>DW</div>\r\n                <input\r\n                  className='InsertContent__entry'\r\n                  type='number'\r\n                  id='draw_win'\r\n                  onChange={changeDrawWin}\r\n                ></input>\r\n              </div>\r\n              <div className='InsertContent'>\r\n                <div className='InsertContent__text'>DD</div>\r\n                <input\r\n                  className='InsertContent__entry'\r\n                  type='number'\r\n                  id='draw_draw'\r\n                  onChange={changeDrawDraw}\r\n                ></input>\r\n              </div>\r\n              <div className='InsertContent'>\r\n                <div className='InsertContent__text'>DL</div>\r\n                <input\r\n                  className='InsertContent__entry'\r\n                  type='number'\r\n                  id='draw_lose'\r\n                  onChange={changeDrawLose}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Item'>\r\n            <div className='ItemHead id'>No.</div>\r\n            <div className='ItemHead users'>Users</div>\r\n            <div className='ItemHead point'>Point</div>\r\n            <div className='ItemHead score'>Score</div>\r\n            <div className='ItemHead times'>Times</div>\r\n            <div className='ItemHead ratio'>Ratio</div>\r\n            <div className='ItemHead count'>Count</div>\r\n          </div>\r\n          {entryTeam.teamList.length > 0 && (\r\n            <ul className='List'>\r\n              {List.map((team: any, idx: number) => (\r\n                <li key={idx} className='ListTop'>\r\n                  <div className='ListBody id'>{idx + 1}</div>\r\n                  <div className='ListBody users'>\r\n                    {team.users}\r\n                    <button className='ListButton' onClick={() => addPlan(idx)}>\r\n                      <img src={Sita} alt='下矢印' width='23px' height='16px' />\r\n                    </button>\r\n                  </div>\r\n                  <div className='ListBody point'>{team.point}</div>\r\n                  <div className='ListBody score'>{team.score}</div>\r\n                  <div className='ListBody times'>{team.times}</div>\r\n                  <div className='ListBody ratio'>{team.ratio}</div>\r\n                  <div className='ListBody count'>{team.count}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {plan.length > 0 && (\r\n        <div className='Result'>\r\n          {plan.map((item, idx: number) => (\r\n            <div className='Result__Border'>\r\n              <div className='Result__Flex' key={idx}>\r\n                <div className={idx % 2 === 0 ? 'Flex left' : 'Flex right'} key={idx}>\r\n                  {idx % 2 === 0 && (\r\n                    <div className='FlexNumber'>\r\n                      <div className='FlexNumber__item'>No.{idx / 2 + 1}</div>\r\n                    </div>\r\n                  )}\r\n                  {idx % 2 === 0 && (\r\n                    <button className='DeleteButton' onClick={() => handleRemoveTask(idx)}>\r\n                      取消\r\n                    </button>\r\n                  )}\r\n                  <div className='FlexCross'>\r\n                    {idx % 2 !== 0 && <div className='FlexCross__item'>-</div>}\r\n                    {idx % 2 !== 0 && <div className='FlexCross__item'>-</div>}\r\n                  </div>\r\n                  <div className='FlexCount'>\r\n                    {idx % 2 !== 0 && (\r\n                      <div className='FlexCount__Point'>\r\n                        <div className='ResultTime'>{item.time1}</div>\r\n                      </div>\r\n                    )}\r\n                    {idx % 2 !== 0 && (\r\n                      <div className='FlexCount__Point'>\r\n                        <div className='ResultTime'>{item.time2}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='FlexCount'>\r\n                    {idx % 2 !== 0 && (\r\n                      <div className='FlexCount__Button'>\r\n                        <button className='AddCount top' onClick={() => addTime1(idx, 5)}>\r\n                          +\r\n                        </button>\r\n                        <button className='SubCount top' onClick={() => addTime1(idx, -1)}>\r\n                          -\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    {idx % 2 !== 0 && (\r\n                      <div className='FlexCount__Button'>\r\n                        <button className='AddCount bottom' onClick={() => addTime2(idx, 5)}>\r\n                          +\r\n                        </button>\r\n                        <button className='SubCount bottom' onClick={() => addTime2(idx, -1)}>\r\n                          -\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='FlexName'>\r\n                    <div className='ResultName'>\r\n                      <p className='ResultName__text'>{item.users}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='FlexCount'>\r\n                    {idx % 2 === 0 && (\r\n                      <div className='FlexCount__Button'>\r\n                        <button className='SubCount top' onClick={() => addTime1(idx, -1)}>\r\n                          -\r\n                        </button>\r\n                        <button className='AddCount top' onClick={() => addTime1(idx, 5)}>\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    {idx % 2 === 0 && (\r\n                      <div className='FlexCount__Button'>\r\n                        <button className='SubCount bottom' onClick={() => addTime2(idx, -1)}>\r\n                          -\r\n                        </button>\r\n                        <button className='AddCount bottom' onClick={() => addTime2(idx, 5)}>\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='FlexCount'>\r\n                    {idx % 2 === 0 && (\r\n                      <div className='FlexCount__Point'>\r\n                        <div className='ResultTime'>{item.time1}</div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {idx % 2 === 0 && (\r\n                      <div className='FlexCount__Point'>\r\n                        <div className='ResultTime'>{item.time2}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {idx % 2 !== 0 && (\r\n                    <button className='DeleteButton' onClick={() => handleRemoveTask(idx)}>\r\n                      取消\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {idx % 2 === 0 && (\r\n                  <div className='Cross'>\r\n                    <div className='Cross__item'>\r\n                      <div className='Cross__text'>-</div>\r\n                    </div>\r\n                    <div className='Cross__item'>\r\n                      <div className='Cross__text'>-</div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\actions\\teamAction.ts",["262"],"interface Obj {\r\n  type: string;\r\n  payload: string;\r\n  param: string;\r\n}\r\n\r\nconst addTeam = (team: string, param: string): Obj => {\r\n  return {\r\n    type: 'ADD_Team',\r\n    payload: team,\r\n    param: param,\r\n  };\r\n};\r\nconst removeTeam = (team: string, param: string): Obj => {\r\n  return {\r\n    type: 'REMOVE_Team',\r\n    payload: param,\r\n    param: window.location.pathname,\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTeam,\r\n  removeTeam,\r\n};\r\n","C:\\Users\\AIQ11\\Documents\\Web\\New2set\\src\\reducers\\team.ts",["263","264","265","266","267","268","269","270","271","272","273"],"type Act = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\nconst initialState = {\r\n  teamList: [],\r\n};\r\nconst path = window.location.pathname;\r\n\r\nconst addTeam = (array: any, team: any, param: any) => {\r\n  console.log(param);\r\n  console.log(array.filter((item: any) => item.param === param));\r\n  return Array.from(\r\n    new Set([\r\n      ...array,\r\n      {\r\n        ...array.param,\r\n        users: team,\r\n        point: 0,\r\n        score: 0,\r\n        times: 0,\r\n        ratio: 0,\r\n        count: 0,\r\n        param: window.location.pathname,\r\n      },\r\n    ]),\r\n  );\r\n}; //重複データが入らないようにするための対応\r\n\r\nconst removeTeam = (array: any, team: any) => {\r\n  return array.filter((v: any, i: any) => v !== team);\r\n};\r\n\r\nconst entryTeam = (state: any = initialState, action: Act): any => {\r\n  switch (action.type) {\r\n    case 'ADD_Team':\r\n      return {\r\n        ...state,\r\n        teamList: addTeam(state.teamList, action.payload, window.location.pathname),\r\n      };\r\n    case 'REMOVE_Team':\r\n      return {\r\n        ...state,\r\n        teamList: removeTeam(state.teamList, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default entryTeam;\r\n",{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":11,"column":9,"nodeType":"280","messageId":"281","endLine":11,"endColumn":20},{"ruleId":"278","severity":1,"message":"282","line":14,"column":9,"nodeType":"280","messageId":"281","endLine":14,"endColumn":19},{"ruleId":"278","severity":1,"message":"283","line":17,"column":9,"nodeType":"280","messageId":"281","endLine":17,"endColumn":20},{"ruleId":"274","replacedBy":"284"},{"ruleId":"276","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":26,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":16,"endColumn":1},{"ruleId":"289","severity":1,"message":"290","line":3,"column":25,"nodeType":"291","messageId":"292","endLine":3,"endColumn":57},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":122,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":26,"column":41,"nodeType":"295","messageId":"296","endLine":26,"endColumn":44,"suggestions":"297"},{"ruleId":"293","severity":1,"message":"294","line":93,"column":48,"nodeType":"295","messageId":"296","endLine":93,"endColumn":51,"suggestions":"298"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":677,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":30,"column":36,"nodeType":"295","messageId":"296","endLine":30,"endColumn":39,"suggestions":"299"},{"ruleId":"293","severity":1,"message":"294","line":37,"column":36,"nodeType":"295","messageId":"296","endLine":37,"endColumn":39,"suggestions":"300"},{"ruleId":"293","severity":1,"message":"294","line":42,"column":27,"nodeType":"295","messageId":"296","endLine":42,"endColumn":30,"suggestions":"301"},{"ruleId":"293","severity":1,"message":"294","line":59,"column":26,"nodeType":"295","messageId":"296","endLine":59,"endColumn":29,"suggestions":"302"},{"ruleId":"293","severity":1,"message":"294","line":63,"column":25,"nodeType":"295","messageId":"296","endLine":63,"endColumn":28,"suggestions":"303"},{"ruleId":"293","severity":1,"message":"294","line":67,"column":29,"nodeType":"295","messageId":"296","endLine":67,"endColumn":32,"suggestions":"304"},{"ruleId":"293","severity":1,"message":"294","line":70,"column":30,"nodeType":"295","messageId":"296","endLine":70,"endColumn":33,"suggestions":"305"},{"ruleId":"293","severity":1,"message":"294","line":73,"column":30,"nodeType":"295","messageId":"296","endLine":73,"endColumn":33,"suggestions":"306"},{"ruleId":"293","severity":1,"message":"294","line":92,"column":20,"nodeType":"295","messageId":"296","endLine":92,"endColumn":23,"suggestions":"307"},{"ruleId":"293","severity":1,"message":"294","line":96,"column":19,"nodeType":"295","messageId":"296","endLine":96,"endColumn":22,"suggestions":"308"},{"ruleId":"293","severity":1,"message":"294","line":99,"column":20,"nodeType":"295","messageId":"296","endLine":99,"endColumn":23,"suggestions":"309"},{"ruleId":"293","severity":1,"message":"294","line":106,"column":20,"nodeType":"295","messageId":"296","endLine":106,"endColumn":23,"suggestions":"310"},{"ruleId":"293","severity":1,"message":"294","line":108,"column":19,"nodeType":"295","messageId":"296","endLine":108,"endColumn":22,"suggestions":"311"},{"ruleId":"293","severity":1,"message":"294","line":116,"column":23,"nodeType":"295","messageId":"296","endLine":116,"endColumn":26,"suggestions":"312"},{"ruleId":"293","severity":1,"message":"294","line":121,"column":23,"nodeType":"295","messageId":"296","endLine":121,"endColumn":26,"suggestions":"313"},{"ruleId":"293","severity":1,"message":"294","line":150,"column":23,"nodeType":"295","messageId":"296","endLine":150,"endColumn":26,"suggestions":"314"},{"ruleId":"293","severity":1,"message":"294","line":181,"column":24,"nodeType":"295","messageId":"296","endLine":181,"endColumn":27,"suggestions":"315"},{"ruleId":"293","severity":1,"message":"294","line":183,"column":23,"nodeType":"295","messageId":"296","endLine":183,"endColumn":26,"suggestions":"316"},{"ruleId":"293","severity":1,"message":"294","line":186,"column":69,"nodeType":"295","messageId":"296","endLine":186,"endColumn":72,"suggestions":"317"},{"ruleId":"293","severity":1,"message":"294","line":190,"column":21,"nodeType":"295","messageId":"296","endLine":190,"endColumn":24,"suggestions":"318"},{"ruleId":"293","severity":1,"message":"294","line":193,"column":23,"nodeType":"295","messageId":"296","endLine":193,"endColumn":26,"suggestions":"319"},{"ruleId":"293","severity":1,"message":"294","line":196,"column":70,"nodeType":"295","messageId":"296","endLine":196,"endColumn":73,"suggestions":"320"},{"ruleId":"293","severity":1,"message":"294","line":200,"column":24,"nodeType":"295","messageId":"296","endLine":200,"endColumn":27,"suggestions":"321"},{"ruleId":"293","severity":1,"message":"294","line":210,"column":23,"nodeType":"295","messageId":"296","endLine":210,"endColumn":26,"suggestions":"322"},{"ruleId":"293","severity":1,"message":"294","line":215,"column":23,"nodeType":"295","messageId":"296","endLine":215,"endColumn":26,"suggestions":"323"},{"ruleId":"293","severity":1,"message":"294","line":244,"column":23,"nodeType":"295","messageId":"296","endLine":244,"endColumn":26,"suggestions":"324"},{"ruleId":"293","severity":1,"message":"294","line":275,"column":24,"nodeType":"295","messageId":"296","endLine":275,"endColumn":27,"suggestions":"325"},{"ruleId":"293","severity":1,"message":"294","line":277,"column":23,"nodeType":"295","messageId":"296","endLine":277,"endColumn":26,"suggestions":"326"},{"ruleId":"293","severity":1,"message":"294","line":280,"column":69,"nodeType":"295","messageId":"296","endLine":280,"endColumn":72,"suggestions":"327"},{"ruleId":"293","severity":1,"message":"294","line":284,"column":21,"nodeType":"295","messageId":"296","endLine":284,"endColumn":24,"suggestions":"328"},{"ruleId":"293","severity":1,"message":"294","line":287,"column":23,"nodeType":"295","messageId":"296","endLine":287,"endColumn":26,"suggestions":"329"},{"ruleId":"293","severity":1,"message":"294","line":290,"column":70,"nodeType":"295","messageId":"296","endLine":290,"endColumn":73,"suggestions":"330"},{"ruleId":"293","severity":1,"message":"294","line":294,"column":24,"nodeType":"295","messageId":"296","endLine":294,"endColumn":27,"suggestions":"331"},{"ruleId":"274","replacedBy":"332"},{"ruleId":"276","replacedBy":"333"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":42,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":65,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":16,"column":25,"nodeType":"295","messageId":"296","endLine":16,"endColumn":28,"suggestions":"334"},{"ruleId":"293","severity":1,"message":"294","line":44,"column":28,"nodeType":"295","messageId":"296","endLine":44,"endColumn":31,"suggestions":"335"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":103,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":58,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":15,"column":25,"nodeType":"295","messageId":"296","endLine":15,"endColumn":28,"suggestions":"336"},{"ruleId":"293","severity":1,"message":"294","line":41,"column":28,"nodeType":"295","messageId":"296","endLine":41,"endColumn":31,"suggestions":"337"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":87,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":16,"column":43,"nodeType":"295","messageId":"296","endLine":16,"endColumn":46,"suggestions":"338"},{"ruleId":"293","severity":1,"message":"294","line":17,"column":41,"nodeType":"295","messageId":"296","endLine":17,"endColumn":44,"suggestions":"339"},{"ruleId":"293","severity":1,"message":"294","line":79,"column":38,"nodeType":"295","messageId":"296","endLine":79,"endColumn":41,"suggestions":"340"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":16,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":26,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":6,"column":48,"nodeType":"295","messageId":"296","endLine":6,"endColumn":51,"suggestions":"341"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":17,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":5,"column":25,"nodeType":"295","messageId":"296","endLine":5,"endColumn":28,"suggestions":"342"},{"ruleId":"293","severity":1,"message":"294","line":5,"column":48,"nodeType":"295","messageId":"296","endLine":5,"endColumn":51,"suggestions":"343"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":14,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":21,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":27,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":23,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":36,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":10,"column":25,"nodeType":"295","messageId":"296","endLine":10,"endColumn":28,"suggestions":"344"},{"ruleId":"293","severity":1,"message":"294","line":10,"column":36,"nodeType":"295","messageId":"296","endLine":10,"endColumn":39,"suggestions":"345"},{"ruleId":"293","severity":1,"message":"294","line":14,"column":28,"nodeType":"295","messageId":"296","endLine":14,"endColumn":31,"suggestions":"346"},{"ruleId":"293","severity":1,"message":"294","line":14,"column":39,"nodeType":"295","messageId":"296","endLine":14,"endColumn":42,"suggestions":"347"},{"ruleId":"293","severity":1,"message":"294","line":15,"column":27,"nodeType":"295","messageId":"296","endLine":15,"endColumn":30,"suggestions":"348"},{"ruleId":"293","severity":1,"message":"294","line":15,"column":35,"nodeType":"295","messageId":"296","endLine":15,"endColumn":38,"suggestions":"349"},{"ruleId":"293","severity":1,"message":"294","line":18,"column":27,"nodeType":"295","messageId":"296","endLine":18,"endColumn":30,"suggestions":"350"},{"ruleId":"293","severity":1,"message":"294","line":18,"column":61,"nodeType":"295","messageId":"296","endLine":18,"endColumn":64,"suggestions":"351"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":505,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":40,"column":41,"nodeType":"295","messageId":"296","endLine":40,"endColumn":44,"suggestions":"352"},{"ruleId":"293","severity":1,"message":"294","line":60,"column":49,"nodeType":"295","messageId":"296","endLine":60,"endColumn":52,"suggestions":"353"},{"ruleId":"293","severity":1,"message":"294","line":64,"column":20,"nodeType":"295","messageId":"296","endLine":64,"endColumn":23,"suggestions":"354"},{"ruleId":"293","severity":1,"message":"294","line":64,"column":43,"nodeType":"295","messageId":"296","endLine":64,"endColumn":46,"suggestions":"355"},{"ruleId":"293","severity":1,"message":"294","line":66,"column":19,"nodeType":"295","messageId":"296","endLine":66,"endColumn":22,"suggestions":"356"},{"ruleId":"293","severity":1,"message":"294","line":75,"column":20,"nodeType":"295","messageId":"296","endLine":75,"endColumn":23,"suggestions":"357"},{"ruleId":"293","severity":1,"message":"294","line":75,"column":43,"nodeType":"295","messageId":"296","endLine":75,"endColumn":46,"suggestions":"358"},{"ruleId":"293","severity":1,"message":"294","line":79,"column":19,"nodeType":"295","messageId":"296","endLine":79,"endColumn":22,"suggestions":"359"},{"ruleId":"293","severity":1,"message":"294","line":82,"column":20,"nodeType":"295","messageId":"296","endLine":82,"endColumn":23,"suggestions":"360"},{"ruleId":"293","severity":1,"message":"294","line":82,"column":43,"nodeType":"295","messageId":"296","endLine":82,"endColumn":46,"suggestions":"361"},{"ruleId":"293","severity":1,"message":"294","line":88,"column":23,"nodeType":"295","messageId":"296","endLine":88,"endColumn":26,"suggestions":"362"},{"ruleId":"293","severity":1,"message":"294","line":88,"column":46,"nodeType":"295","messageId":"296","endLine":88,"endColumn":49,"suggestions":"363"},{"ruleId":"293","severity":1,"message":"294","line":93,"column":23,"nodeType":"295","messageId":"296","endLine":93,"endColumn":26,"suggestions":"364"},{"ruleId":"293","severity":1,"message":"294","line":93,"column":46,"nodeType":"295","messageId":"296","endLine":93,"endColumn":49,"suggestions":"365"},{"ruleId":"293","severity":1,"message":"294","line":122,"column":23,"nodeType":"295","messageId":"296","endLine":122,"endColumn":26,"suggestions":"366"},{"ruleId":"293","severity":1,"message":"294","line":153,"column":24,"nodeType":"295","messageId":"296","endLine":153,"endColumn":27,"suggestions":"367"},{"ruleId":"293","severity":1,"message":"294","line":153,"column":47,"nodeType":"295","messageId":"296","endLine":153,"endColumn":50,"suggestions":"368"},{"ruleId":"293","severity":1,"message":"294","line":155,"column":23,"nodeType":"295","messageId":"296","endLine":155,"endColumn":26,"suggestions":"369"},{"ruleId":"293","severity":1,"message":"294","line":158,"column":69,"nodeType":"295","messageId":"296","endLine":158,"endColumn":72,"suggestions":"370"},{"ruleId":"293","severity":1,"message":"294","line":162,"column":21,"nodeType":"295","messageId":"296","endLine":162,"endColumn":24,"suggestions":"371"},{"ruleId":"293","severity":1,"message":"294","line":162,"column":44,"nodeType":"295","messageId":"296","endLine":162,"endColumn":47,"suggestions":"372"},{"ruleId":"293","severity":1,"message":"294","line":165,"column":23,"nodeType":"295","messageId":"296","endLine":165,"endColumn":26,"suggestions":"373"},{"ruleId":"293","severity":1,"message":"294","line":168,"column":70,"nodeType":"295","messageId":"296","endLine":168,"endColumn":73,"suggestions":"374"},{"ruleId":"293","severity":1,"message":"294","line":172,"column":24,"nodeType":"295","messageId":"296","endLine":172,"endColumn":27,"suggestions":"375"},{"ruleId":"293","severity":1,"message":"294","line":172,"column":47,"nodeType":"295","messageId":"296","endLine":172,"endColumn":50,"suggestions":"376"},{"ruleId":"293","severity":1,"message":"294","line":182,"column":23,"nodeType":"295","messageId":"296","endLine":182,"endColumn":26,"suggestions":"377"},{"ruleId":"293","severity":1,"message":"294","line":187,"column":23,"nodeType":"295","messageId":"296","endLine":187,"endColumn":26,"suggestions":"378"},{"ruleId":"293","severity":1,"message":"294","line":216,"column":23,"nodeType":"295","messageId":"296","endLine":216,"endColumn":26,"suggestions":"379"},{"ruleId":"293","severity":1,"message":"294","line":247,"column":24,"nodeType":"295","messageId":"296","endLine":247,"endColumn":27,"suggestions":"380"},{"ruleId":"293","severity":1,"message":"294","line":247,"column":47,"nodeType":"295","messageId":"296","endLine":247,"endColumn":50,"suggestions":"381"},{"ruleId":"293","severity":1,"message":"294","line":249,"column":23,"nodeType":"295","messageId":"296","endLine":249,"endColumn":26,"suggestions":"382"},{"ruleId":"293","severity":1,"message":"294","line":252,"column":69,"nodeType":"295","messageId":"296","endLine":252,"endColumn":72,"suggestions":"383"},{"ruleId":"293","severity":1,"message":"294","line":256,"column":21,"nodeType":"295","messageId":"296","endLine":256,"endColumn":24,"suggestions":"384"},{"ruleId":"293","severity":1,"message":"294","line":256,"column":44,"nodeType":"295","messageId":"296","endLine":256,"endColumn":47,"suggestions":"385"},{"ruleId":"293","severity":1,"message":"294","line":259,"column":23,"nodeType":"295","messageId":"296","endLine":259,"endColumn":26,"suggestions":"386"},{"ruleId":"293","severity":1,"message":"294","line":262,"column":70,"nodeType":"295","messageId":"296","endLine":262,"endColumn":73,"suggestions":"387"},{"ruleId":"293","severity":1,"message":"294","line":266,"column":24,"nodeType":"295","messageId":"296","endLine":266,"endColumn":27,"suggestions":"388"},{"ruleId":"293","severity":1,"message":"294","line":266,"column":47,"nodeType":"295","messageId":"296","endLine":266,"endColumn":50,"suggestions":"389"},{"ruleId":"293","severity":1,"message":"294","line":275,"column":25,"nodeType":"295","messageId":"296","endLine":275,"endColumn":28,"suggestions":"390"},{"ruleId":"293","severity":1,"message":"294","line":279,"column":29,"nodeType":"295","messageId":"296","endLine":279,"endColumn":32,"suggestions":"391"},{"ruleId":"293","severity":1,"message":"294","line":282,"column":30,"nodeType":"295","messageId":"296","endLine":282,"endColumn":33,"suggestions":"392"},{"ruleId":"293","severity":1,"message":"294","line":285,"column":30,"nodeType":"295","messageId":"296","endLine":285,"endColumn":33,"suggestions":"393"},{"ruleId":"293","severity":1,"message":"294","line":365,"column":32,"nodeType":"295","messageId":"296","endLine":365,"endColumn":35,"suggestions":"394"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":26,"endColumn":1},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":53,"endColumn":1},{"ruleId":"293","severity":1,"message":"294","line":11,"column":25,"nodeType":"295","messageId":"296","endLine":11,"endColumn":28,"suggestions":"395"},{"ruleId":"293","severity":1,"message":"294","line":11,"column":36,"nodeType":"295","messageId":"296","endLine":11,"endColumn":39,"suggestions":"396"},{"ruleId":"293","severity":1,"message":"294","line":11,"column":48,"nodeType":"295","messageId":"296","endLine":11,"endColumn":51,"suggestions":"397"},{"ruleId":"293","severity":1,"message":"294","line":13,"column":35,"nodeType":"295","messageId":"296","endLine":13,"endColumn":38,"suggestions":"398"},{"ruleId":"293","severity":1,"message":"294","line":31,"column":28,"nodeType":"295","messageId":"296","endLine":31,"endColumn":31,"suggestions":"399"},{"ruleId":"293","severity":1,"message":"294","line":31,"column":39,"nodeType":"295","messageId":"296","endLine":31,"endColumn":42,"suggestions":"400"},{"ruleId":"293","severity":1,"message":"294","line":32,"column":27,"nodeType":"295","messageId":"296","endLine":32,"endColumn":30,"suggestions":"401"},{"ruleId":"293","severity":1,"message":"294","line":32,"column":35,"nodeType":"295","messageId":"296","endLine":32,"endColumn":38,"suggestions":"402"},{"ruleId":"293","severity":1,"message":"294","line":35,"column":27,"nodeType":"295","messageId":"296","endLine":35,"endColumn":30,"suggestions":"403"},{"ruleId":"293","severity":1,"message":"294","line":35,"column":61,"nodeType":"295","messageId":"296","endLine":35,"endColumn":64,"suggestions":"404"},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"@typescript-eslint/no-unused-vars","'changeTitle' is assigned a value but never used.","Identifier","unusedVar","'titleClear' is assigned a value but never used.","'returnTitle' is assigned a value but never used.",["405"],["406"],"import/order","Incorrect configuration of the rule: Unknown type `\"type\"`","Program","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["407","408"],["409","410"],["411","412"],["413","414"],["415","416"],["417","418"],["419","420"],["421","422"],["423","424"],["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],["437","438"],["439","440"],["441","442"],["443","444"],["445","446"],["447","448"],["449","450"],["451","452"],["453","454"],["455","456"],["457","458"],["459","460"],["461","462"],["463","464"],["465","466"],["467","468"],["469","470"],["471","472"],["473","474"],["475","476"],["405"],["406"],["477","478"],["479","480"],["481","482"],["483","484"],["485","486"],["487","488"],["489","490"],["491","492"],["493","494"],["495","496"],["497","498"],["499","500"],["501","502"],["503","504"],["505","506"],["507","508"],["509","510"],["511","512"],["513","514"],["515","516"],["517","518"],["519","520"],["521","522"],["523","524"],["525","526"],["527","528"],["529","530"],["531","532"],["533","534"],["535","536"],["537","538"],["539","540"],["541","542"],["543","544"],["545","546"],["547","548"],["549","550"],["551","552"],["553","554"],["555","556"],["557","558"],["559","560"],["561","562"],["563","564"],["565","566"],["567","568"],["569","570"],["571","572"],["573","574"],["575","576"],["577","578"],["579","580"],["581","582"],["583","584"],["585","586"],["587","588"],["589","590"],["591","592"],["593","594"],["595","596"],["597","598"],["599","600"],["601","602"],["603","604"],["605","606"],["607","608"],["609","610"],["611","612"],["613","614"],["615","616"],["617","618"],"no-global-assign","no-unsafe-negation",{"messageId":"619","fix":"620","desc":"621"},{"messageId":"622","fix":"623","desc":"624"},{"messageId":"619","fix":"625","desc":"621"},{"messageId":"622","fix":"626","desc":"624"},{"messageId":"619","fix":"627","desc":"621"},{"messageId":"622","fix":"628","desc":"624"},{"messageId":"619","fix":"629","desc":"621"},{"messageId":"622","fix":"630","desc":"624"},{"messageId":"619","fix":"631","desc":"621"},{"messageId":"622","fix":"632","desc":"624"},{"messageId":"619","fix":"633","desc":"621"},{"messageId":"622","fix":"634","desc":"624"},{"messageId":"619","fix":"635","desc":"621"},{"messageId":"622","fix":"636","desc":"624"},{"messageId":"619","fix":"637","desc":"621"},{"messageId":"622","fix":"638","desc":"624"},{"messageId":"619","fix":"639","desc":"621"},{"messageId":"622","fix":"640","desc":"624"},{"messageId":"619","fix":"641","desc":"621"},{"messageId":"622","fix":"642","desc":"624"},{"messageId":"619","fix":"643","desc":"621"},{"messageId":"622","fix":"644","desc":"624"},{"messageId":"619","fix":"645","desc":"621"},{"messageId":"622","fix":"646","desc":"624"},{"messageId":"619","fix":"647","desc":"621"},{"messageId":"622","fix":"648","desc":"624"},{"messageId":"619","fix":"649","desc":"621"},{"messageId":"622","fix":"650","desc":"624"},{"messageId":"619","fix":"651","desc":"621"},{"messageId":"622","fix":"652","desc":"624"},{"messageId":"619","fix":"653","desc":"621"},{"messageId":"622","fix":"654","desc":"624"},{"messageId":"619","fix":"655","desc":"621"},{"messageId":"622","fix":"656","desc":"624"},{"messageId":"619","fix":"657","desc":"621"},{"messageId":"622","fix":"658","desc":"624"},{"messageId":"619","fix":"659","desc":"621"},{"messageId":"622","fix":"660","desc":"624"},{"messageId":"619","fix":"661","desc":"621"},{"messageId":"622","fix":"662","desc":"624"},{"messageId":"619","fix":"663","desc":"621"},{"messageId":"622","fix":"664","desc":"624"},{"messageId":"619","fix":"665","desc":"621"},{"messageId":"622","fix":"666","desc":"624"},{"messageId":"619","fix":"667","desc":"621"},{"messageId":"622","fix":"668","desc":"624"},{"messageId":"619","fix":"669","desc":"621"},{"messageId":"622","fix":"670","desc":"624"},{"messageId":"619","fix":"671","desc":"621"},{"messageId":"622","fix":"672","desc":"624"},{"messageId":"619","fix":"673","desc":"621"},{"messageId":"622","fix":"674","desc":"624"},{"messageId":"619","fix":"675","desc":"621"},{"messageId":"622","fix":"676","desc":"624"},{"messageId":"619","fix":"677","desc":"621"},{"messageId":"622","fix":"678","desc":"624"},{"messageId":"619","fix":"679","desc":"621"},{"messageId":"622","fix":"680","desc":"624"},{"messageId":"619","fix":"681","desc":"621"},{"messageId":"622","fix":"682","desc":"624"},{"messageId":"619","fix":"683","desc":"621"},{"messageId":"622","fix":"684","desc":"624"},{"messageId":"619","fix":"685","desc":"621"},{"messageId":"622","fix":"686","desc":"624"},{"messageId":"619","fix":"687","desc":"621"},{"messageId":"622","fix":"688","desc":"624"},{"messageId":"619","fix":"689","desc":"621"},{"messageId":"622","fix":"690","desc":"624"},{"messageId":"619","fix":"691","desc":"621"},{"messageId":"622","fix":"692","desc":"624"},{"messageId":"619","fix":"693","desc":"621"},{"messageId":"622","fix":"694","desc":"624"},{"messageId":"619","fix":"695","desc":"621"},{"messageId":"622","fix":"696","desc":"624"},{"messageId":"619","fix":"697","desc":"621"},{"messageId":"622","fix":"698","desc":"624"},{"messageId":"619","fix":"699","desc":"621"},{"messageId":"622","fix":"700","desc":"624"},{"messageId":"619","fix":"701","desc":"621"},{"messageId":"622","fix":"702","desc":"624"},{"messageId":"619","fix":"703","desc":"621"},{"messageId":"622","fix":"704","desc":"624"},{"messageId":"619","fix":"705","desc":"621"},{"messageId":"622","fix":"706","desc":"624"},{"messageId":"619","fix":"707","desc":"621"},{"messageId":"622","fix":"708","desc":"624"},{"messageId":"619","fix":"709","desc":"621"},{"messageId":"622","fix":"710","desc":"624"},{"messageId":"619","fix":"711","desc":"621"},{"messageId":"622","fix":"712","desc":"624"},{"messageId":"619","fix":"713","desc":"621"},{"messageId":"622","fix":"714","desc":"624"},{"messageId":"619","fix":"715","desc":"621"},{"messageId":"622","fix":"716","desc":"624"},{"messageId":"619","fix":"717","desc":"621"},{"messageId":"622","fix":"718","desc":"624"},{"messageId":"619","fix":"719","desc":"621"},{"messageId":"622","fix":"720","desc":"624"},{"messageId":"619","fix":"721","desc":"621"},{"messageId":"622","fix":"722","desc":"624"},{"messageId":"619","fix":"723","desc":"621"},{"messageId":"622","fix":"724","desc":"624"},{"messageId":"619","fix":"725","desc":"621"},{"messageId":"622","fix":"726","desc":"624"},{"messageId":"619","fix":"727","desc":"621"},{"messageId":"622","fix":"728","desc":"624"},{"messageId":"619","fix":"729","desc":"621"},{"messageId":"622","fix":"730","desc":"624"},{"messageId":"619","fix":"731","desc":"621"},{"messageId":"622","fix":"732","desc":"624"},{"messageId":"619","fix":"733","desc":"621"},{"messageId":"622","fix":"734","desc":"624"},{"messageId":"619","fix":"735","desc":"621"},{"messageId":"622","fix":"736","desc":"624"},{"messageId":"619","fix":"737","desc":"621"},{"messageId":"622","fix":"738","desc":"624"},{"messageId":"619","fix":"739","desc":"621"},{"messageId":"622","fix":"740","desc":"624"},{"messageId":"619","fix":"741","desc":"621"},{"messageId":"622","fix":"742","desc":"624"},{"messageId":"619","fix":"743","desc":"621"},{"messageId":"622","fix":"744","desc":"624"},{"messageId":"619","fix":"745","desc":"621"},{"messageId":"622","fix":"746","desc":"624"},{"messageId":"619","fix":"747","desc":"621"},{"messageId":"622","fix":"748","desc":"624"},{"messageId":"619","fix":"749","desc":"621"},{"messageId":"622","fix":"750","desc":"624"},{"messageId":"619","fix":"751","desc":"621"},{"messageId":"622","fix":"752","desc":"624"},{"messageId":"619","fix":"753","desc":"621"},{"messageId":"622","fix":"754","desc":"624"},{"messageId":"619","fix":"755","desc":"621"},{"messageId":"622","fix":"756","desc":"624"},{"messageId":"619","fix":"757","desc":"621"},{"messageId":"622","fix":"758","desc":"624"},{"messageId":"619","fix":"759","desc":"621"},{"messageId":"622","fix":"760","desc":"624"},{"messageId":"619","fix":"761","desc":"621"},{"messageId":"622","fix":"762","desc":"624"},{"messageId":"619","fix":"763","desc":"621"},{"messageId":"622","fix":"764","desc":"624"},{"messageId":"619","fix":"765","desc":"621"},{"messageId":"622","fix":"766","desc":"624"},{"messageId":"619","fix":"767","desc":"621"},{"messageId":"622","fix":"768","desc":"624"},{"messageId":"619","fix":"769","desc":"621"},{"messageId":"622","fix":"770","desc":"624"},{"messageId":"619","fix":"771","desc":"621"},{"messageId":"622","fix":"772","desc":"624"},{"messageId":"619","fix":"773","desc":"621"},{"messageId":"622","fix":"774","desc":"624"},{"messageId":"619","fix":"775","desc":"621"},{"messageId":"622","fix":"776","desc":"624"},{"messageId":"619","fix":"777","desc":"621"},{"messageId":"622","fix":"778","desc":"624"},{"messageId":"619","fix":"779","desc":"621"},{"messageId":"622","fix":"780","desc":"624"},{"messageId":"619","fix":"781","desc":"621"},{"messageId":"622","fix":"782","desc":"624"},{"messageId":"619","fix":"783","desc":"621"},{"messageId":"622","fix":"784","desc":"624"},{"messageId":"619","fix":"785","desc":"621"},{"messageId":"622","fix":"786","desc":"624"},{"messageId":"619","fix":"787","desc":"621"},{"messageId":"622","fix":"788","desc":"624"},{"messageId":"619","fix":"789","desc":"621"},{"messageId":"622","fix":"790","desc":"624"},{"messageId":"619","fix":"791","desc":"621"},{"messageId":"622","fix":"792","desc":"624"},{"messageId":"619","fix":"793","desc":"621"},{"messageId":"622","fix":"794","desc":"624"},{"messageId":"619","fix":"795","desc":"621"},{"messageId":"622","fix":"796","desc":"624"},{"messageId":"619","fix":"797","desc":"621"},{"messageId":"622","fix":"798","desc":"624"},{"messageId":"619","fix":"799","desc":"621"},{"messageId":"622","fix":"800","desc":"624"},{"messageId":"619","fix":"801","desc":"621"},{"messageId":"622","fix":"802","desc":"624"},{"messageId":"619","fix":"803","desc":"621"},{"messageId":"622","fix":"804","desc":"624"},{"messageId":"619","fix":"805","desc":"621"},{"messageId":"622","fix":"806","desc":"624"},{"messageId":"619","fix":"807","desc":"621"},{"messageId":"622","fix":"808","desc":"624"},{"messageId":"619","fix":"809","desc":"621"},{"messageId":"622","fix":"810","desc":"624"},{"messageId":"619","fix":"811","desc":"621"},{"messageId":"622","fix":"812","desc":"624"},{"messageId":"619","fix":"813","desc":"621"},{"messageId":"622","fix":"814","desc":"624"},{"messageId":"619","fix":"815","desc":"621"},{"messageId":"622","fix":"816","desc":"624"},{"messageId":"619","fix":"817","desc":"621"},{"messageId":"622","fix":"818","desc":"624"},{"messageId":"619","fix":"819","desc":"621"},{"messageId":"622","fix":"820","desc":"624"},{"messageId":"619","fix":"821","desc":"621"},{"messageId":"622","fix":"822","desc":"624"},{"messageId":"619","fix":"823","desc":"621"},{"messageId":"622","fix":"824","desc":"624"},{"messageId":"619","fix":"825","desc":"621"},{"messageId":"622","fix":"826","desc":"624"},{"messageId":"619","fix":"827","desc":"621"},{"messageId":"622","fix":"828","desc":"624"},{"messageId":"619","fix":"829","desc":"621"},{"messageId":"622","fix":"830","desc":"624"},{"messageId":"619","fix":"831","desc":"621"},{"messageId":"622","fix":"832","desc":"624"},{"messageId":"619","fix":"833","desc":"621"},{"messageId":"622","fix":"834","desc":"624"},"suggestUnknown",{"range":"835","text":"836"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"835","text":"837"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"838","text":"836"},{"range":"838","text":"837"},{"range":"839","text":"836"},{"range":"839","text":"837"},{"range":"840","text":"836"},{"range":"840","text":"837"},{"range":"841","text":"836"},{"range":"841","text":"837"},{"range":"842","text":"836"},{"range":"842","text":"837"},{"range":"843","text":"836"},{"range":"843","text":"837"},{"range":"844","text":"836"},{"range":"844","text":"837"},{"range":"845","text":"836"},{"range":"845","text":"837"},{"range":"846","text":"836"},{"range":"846","text":"837"},{"range":"847","text":"836"},{"range":"847","text":"837"},{"range":"848","text":"836"},{"range":"848","text":"837"},{"range":"849","text":"836"},{"range":"849","text":"837"},{"range":"850","text":"836"},{"range":"850","text":"837"},{"range":"851","text":"836"},{"range":"851","text":"837"},{"range":"852","text":"836"},{"range":"852","text":"837"},{"range":"853","text":"836"},{"range":"853","text":"837"},{"range":"854","text":"836"},{"range":"854","text":"837"},{"range":"855","text":"836"},{"range":"855","text":"837"},{"range":"856","text":"836"},{"range":"856","text":"837"},{"range":"857","text":"836"},{"range":"857","text":"837"},{"range":"858","text":"836"},{"range":"858","text":"837"},{"range":"859","text":"836"},{"range":"859","text":"837"},{"range":"860","text":"836"},{"range":"860","text":"837"},{"range":"861","text":"836"},{"range":"861","text":"837"},{"range":"862","text":"836"},{"range":"862","text":"837"},{"range":"863","text":"836"},{"range":"863","text":"837"},{"range":"864","text":"836"},{"range":"864","text":"837"},{"range":"865","text":"836"},{"range":"865","text":"837"},{"range":"866","text":"836"},{"range":"866","text":"837"},{"range":"867","text":"836"},{"range":"867","text":"837"},{"range":"868","text":"836"},{"range":"868","text":"837"},{"range":"869","text":"836"},{"range":"869","text":"837"},{"range":"870","text":"836"},{"range":"870","text":"837"},{"range":"871","text":"836"},{"range":"871","text":"837"},{"range":"872","text":"836"},{"range":"872","text":"837"},{"range":"873","text":"836"},{"range":"873","text":"837"},{"range":"874","text":"836"},{"range":"874","text":"837"},{"range":"875","text":"836"},{"range":"875","text":"837"},{"range":"876","text":"836"},{"range":"876","text":"837"},{"range":"877","text":"836"},{"range":"877","text":"837"},{"range":"878","text":"836"},{"range":"878","text":"837"},{"range":"879","text":"836"},{"range":"879","text":"837"},{"range":"880","text":"836"},{"range":"880","text":"837"},{"range":"881","text":"836"},{"range":"881","text":"837"},{"range":"882","text":"836"},{"range":"882","text":"837"},{"range":"883","text":"836"},{"range":"883","text":"837"},{"range":"884","text":"836"},{"range":"884","text":"837"},{"range":"885","text":"836"},{"range":"885","text":"837"},{"range":"886","text":"836"},{"range":"886","text":"837"},{"range":"887","text":"836"},{"range":"887","text":"837"},{"range":"888","text":"836"},{"range":"888","text":"837"},{"range":"889","text":"836"},{"range":"889","text":"837"},{"range":"890","text":"836"},{"range":"890","text":"837"},{"range":"891","text":"836"},{"range":"891","text":"837"},{"range":"892","text":"836"},{"range":"892","text":"837"},{"range":"893","text":"836"},{"range":"893","text":"837"},{"range":"894","text":"836"},{"range":"894","text":"837"},{"range":"895","text":"836"},{"range":"895","text":"837"},{"range":"896","text":"836"},{"range":"896","text":"837"},{"range":"897","text":"836"},{"range":"897","text":"837"},{"range":"898","text":"836"},{"range":"898","text":"837"},{"range":"899","text":"836"},{"range":"899","text":"837"},{"range":"900","text":"836"},{"range":"900","text":"837"},{"range":"901","text":"836"},{"range":"901","text":"837"},{"range":"902","text":"836"},{"range":"902","text":"837"},{"range":"903","text":"836"},{"range":"903","text":"837"},{"range":"904","text":"836"},{"range":"904","text":"837"},{"range":"905","text":"836"},{"range":"905","text":"837"},{"range":"906","text":"836"},{"range":"906","text":"837"},{"range":"907","text":"836"},{"range":"907","text":"837"},{"range":"908","text":"836"},{"range":"908","text":"837"},{"range":"909","text":"836"},{"range":"909","text":"837"},{"range":"910","text":"836"},{"range":"910","text":"837"},{"range":"911","text":"836"},{"range":"911","text":"837"},{"range":"912","text":"836"},{"range":"912","text":"837"},{"range":"913","text":"836"},{"range":"913","text":"837"},{"range":"914","text":"836"},{"range":"914","text":"837"},{"range":"915","text":"836"},{"range":"915","text":"837"},{"range":"916","text":"836"},{"range":"916","text":"837"},{"range":"917","text":"836"},{"range":"917","text":"837"},{"range":"918","text":"836"},{"range":"918","text":"837"},{"range":"919","text":"836"},{"range":"919","text":"837"},{"range":"920","text":"836"},{"range":"920","text":"837"},{"range":"921","text":"836"},{"range":"921","text":"837"},{"range":"922","text":"836"},{"range":"922","text":"837"},{"range":"923","text":"836"},{"range":"923","text":"837"},{"range":"924","text":"836"},{"range":"924","text":"837"},{"range":"925","text":"836"},{"range":"925","text":"837"},{"range":"926","text":"836"},{"range":"926","text":"837"},{"range":"927","text":"836"},{"range":"927","text":"837"},{"range":"928","text":"836"},{"range":"928","text":"837"},{"range":"929","text":"836"},{"range":"929","text":"837"},{"range":"930","text":"836"},{"range":"930","text":"837"},{"range":"931","text":"836"},{"range":"931","text":"837"},{"range":"932","text":"836"},{"range":"932","text":"837"},{"range":"933","text":"836"},{"range":"933","text":"837"},{"range":"934","text":"836"},{"range":"934","text":"837"},{"range":"935","text":"836"},{"range":"935","text":"837"},{"range":"936","text":"836"},{"range":"936","text":"837"},{"range":"937","text":"836"},{"range":"937","text":"837"},{"range":"938","text":"836"},{"range":"938","text":"837"},{"range":"939","text":"836"},{"range":"939","text":"837"},{"range":"940","text":"836"},{"range":"940","text":"837"},{"range":"941","text":"836"},{"range":"941","text":"837"},{"range":"942","text":"836"},{"range":"942","text":"837"},[831,834],"unknown","never",[2724,2727],[785,788],[1139,1142],[1280,1283],[1629,1632],[1733,1736],[1824,1827],[1903,1906],[1983,1986],[2334,2337],[2488,2491],[2594,2597],[2800,2803],[2957,2960],[3206,3209],[3411,3414],[4863,4866],[6373,6376],[6468,6471],[6626,6629],[6726,6729],[6863,6866],[7022,7025],[7125,7128],[7427,7430],[7632,7635],[9084,9087],[10594,10597],[10689,10692],[10847,10850],[10947,10950],[11084,11087],[11243,11246],[11346,11349],[307,310],[975,978],[277,280],[866,869],[464,467],[533,536],[2262,2265],[104,107],[63,66],[86,89],[128,131],[139,142],[255,258],[266,269],[303,306],[311,314],[365,368],[399,402],[1140,1143],[1646,1649],[1756,1759],[1779,1782],[1920,1923],[2183,2186],[2206,2209],[2342,2345],[2450,2453],[2473,2476],[2666,2669],[2689,2692],[2876,2879],[2899,2902],[4333,4336],[5843,5846],[5866,5869],[5943,5946],[6103,6106],[6203,6206],[6226,6229],[6347,6350],[6508,6511],[6611,6614],[6634,6637],[6920,6923],[7125,7128],[8577,8580],[10087,10090],[10110,10113],[10187,10190],[10347,10350],[10447,10450],[10470,10473],[10591,10594],[10752,10755],[10855,10858],[10878,10881],[11080,11083],[11171,11174],[11250,11253],[11330,11333],[14233,14236],[168,171],[179,182],[191,194],[259,262],[620,623],[631,634],[668,671],[676,679],[730,733],[764,767]]