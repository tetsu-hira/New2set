{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIQ11\\\\Documents\\\\Web\\\\New2set\\\\src\\\\components\\\\Test.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport allActions from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const currentUser = useSelector(state => state.currentUser);\n  const dispatch = useDispatch();\n  const user = {\n    name: 'Rei'\n  };\n  useEffect(() => {\n    dispatch(allActions.userActions.setUser(user));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u3066\\u3059\\u3068\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u30AB\\u30A6\\u30F3\\u30C8: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('INCREMENT'),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('DECREMENT'),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Test, \"0mge3np/VyDWnVMCzcWDyTY8JHI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/AIQ11/Documents/Web/New2set/src/components/Test.tsx"],"names":["React","useEffect","useSelector","useDispatch","allActions","Test","counter","state","currentUser","dispatch","user","name","userActions","setUser","count"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,WAAW,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B;AAEA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAb;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACL,UAAU,CAACQ,WAAX,CAAuBC,OAAvB,CAA+BH,IAA/B,CAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,+CAAWH,KAAK,CAACO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAML,QAAQ,CAAC,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CArBD;;GAAMJ,I;UACYH,W,EACIA,W,EAEHC,W;;;KAJbE,I;AAuBN,eAAeA,IAAf","sourcesContent":["import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport allActions from '../actions';\r\n\r\nconst Test: React.FC = () => {\r\n  const counter = useSelector((state) => state.counter);\r\n  const currentUser = useSelector((state) => state.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = { name: 'Rei' };\r\n\r\n  useEffect(() => {\r\n    dispatch(allActions.userActions.setUser(user));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>てすと</div>\r\n      <h1>Counter</h1>\r\n      <h2>カウント: {state.count}</h2>\r\n      <button onClick={() => dispatch('INCREMENT')}>+</button>\r\n      <button onClick={() => dispatch('DECREMENT')}>-</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}