{"ast":null,"code":"const counter = (state = 1, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n\n    case 'DECREMENT':\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nexport default counter;","map":{"version":3,"sources":["C:/Users/AIQ11/Documents/Web/New2set/src/reducers/counter.ts"],"names":["counter","state","action","type"],"mappings":"AAIA,MAAMA,OAAO,GAAG,CAACC,KAAU,GAAG,CAAd,EAAiBC,MAAjB,KAAsC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,OAAf","sourcesContent":["interface Num {\r\n  type: string;\r\n}\r\n\r\nconst counter = (state: any = 1, action: Num): any => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return state + 1;\r\n    case 'DECREMENT':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counter;\r\n"]},"metadata":{},"sourceType":"module"}