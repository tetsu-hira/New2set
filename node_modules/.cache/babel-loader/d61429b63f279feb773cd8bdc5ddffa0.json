{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIQ11\\\\Documents\\\\Web\\\\New2set\\\\src\\\\components\\\\Index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useReducer } from 'react';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nconst reducer = (state, action) => {\n  if (action === 'INCREMENT') {\n    return {\n      count: state.count + 1\n    };\n  } else {\n    return {\n      count: state.count - 1\n    };\n  }\n};\n\nconst Index = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count:\", store.getState().count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30AB\\u30A6\\u30F3\\u30C8\\uFF1A\", state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/AIQ11/Documents/Web/New2set/src/components/Index.tsx"],"names":["React","useReducer","store","initialState","count","reducer","state","action","Index","dispatch","getState"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B,WAAO;AAAEH,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,KAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAEA,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,KAAP;AACD;AACF,CAND;;AAQA,MAAMI,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBR,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAUD,KAAK,CAACQ,QAAN,GAAiBN,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qDAAUE,KAAK,CAACF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAcD,CAjBD;;GAAMI,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import * as React from 'react';\r\nimport { useReducer } from 'react';\r\n\r\nimport store from '../store';\r\n\r\nconst initialState = {\r\n  count: 0,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  if (action === 'INCREMENT') {\r\n    return { count: state.count + 1 };\r\n  } else {\r\n    return { count: state.count - 1 };\r\n  }\r\n};\r\n\r\nconst Index: React.FC = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>HOME</h1>\r\n        <p>Count:{store.getState().count}</p>\r\n      </div>\r\n      <div>\r\n        <h1>Counter</h1>\r\n        <h2>カウント：{state.count}</h2>\r\n        <button>+</button>\r\n        <button>-</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}