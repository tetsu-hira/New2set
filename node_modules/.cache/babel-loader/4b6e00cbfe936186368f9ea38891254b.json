{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIQ11\\\\Documents\\\\Web\\\\New2set\\\\src\\\\components\\\\Index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // Access initial value from session storage\n    const pageView = sessionStorage.getItem('pageView');\n\n    if (pageView == null) {\n      // pageviewscountを初期化する\n      const pageView = 1;\n    } else {\n      // Increment count\n      pageView = Number(pageView) + 1;\n    } // stateを更新\n\n\n    setCount(pageView);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Page View Count is:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), count]\n  }, void 0, true);\n};\n\n_s(Index, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/AIQ11/Documents/Web/New2set/src/components/Index.tsx"],"names":["React","useState","useEffect","Index","count","setCount","pageView","sessionStorage","getItem","Number"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAS,CAAT,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMI,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAjB;;AACA,QAAIF,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACA,YAAMA,QAAQ,GAAG,CAAjB;AACD,KAHD,MAGO;AACL;AACAA,MAAAA,QAAQ,GAAGG,MAAM,CAACH,QAAD,CAAN,GAAmB,CAA9B;AACD,KATa,CAWd;;;AACAD,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,KAHH;AAAA,kBADF;AAOD,CAzBD;;GAAMD,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Index: React.FC = () => {\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    // Access initial value from session storage\r\n    const pageView = sessionStorage.getItem('pageView');\r\n    if (pageView == null) {\r\n      // pageviewscountを初期化する\r\n      const pageView = 1;\r\n    } else {\r\n      // Increment count\r\n      pageView = Number(pageView) + 1;\r\n    }\r\n\r\n    // stateを更新\r\n    setCount(pageView);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>HOME</div>\r\n      <div>Page View Count is:</div>\r\n      {count}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}